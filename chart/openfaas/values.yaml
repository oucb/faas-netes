functionNamespace:

async: true

exposeServices: true
serviceType: NodePort
rbac: true

faasnetesd:
  readTimeout : "20s"
  writeTimeout : "20s"

gateway:
  readTimeout : "20s"
  writeTimeout : "20s"

queueWorker:
  ackWait : "30s"

# images
images:
  controller: registry.cn-shenzhen.aliyuncs.com/oucb/faas-netesd:0.4.8
  gateway: registry.cn-shenzhen.aliyuncs.com/oucb/gateway:0.7.8
  prometheus: registry.cn-shenzhen.aliyuncs.com/oucb/faas-prometheus:v2.2.0
  alertmanager: registry.cn-shenzhen.aliyuncs.com/oucb/fass-alertmanager:v0.15.0-rc.0
  nats: registry.cn-shenzhen.aliyuncs.com/oucb/nats-streaming:0.6.0
  queueWorker: registry.cn-shenzhen.aliyuncs.com/oucb/queue-worker:0.4.3

# ingress configuration
ingress:
  enabled: false
  # Used to create Ingress record (should be used with exposeServices: false).
  hosts:
    - host: faas-netesd.openfaas.local
      serviceName: faas-netesd
      servicePort: 8080
      path: /
    - host: gateway.openfaas.local
      serviceName: gateway
      servicePort: 8080
      path: /
    - host: prometheus.openfaas.local
      serviceName: prometheus
      servicePort: 9090
      path: /
    - host: alertmanager.openfaas.local
      serviceName: alertmanager
      servicePort: 9093
      path: /
  annotations:
    kubernetes.io/ingress.class: nginx
  tls:
    # Secrets must be manually created in the namespace.
